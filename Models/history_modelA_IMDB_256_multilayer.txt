{'train_loss': [0.8503119565070943, 0.6071206578548919, 0.4350741188576881, 0.3364103379401755, 0.2835067799116703, 0.24738855723370898, 0.18606099708283202, 0.1647852212190628, 0.13580466220353513, 0.13295353457648704, 0.0977571410860153, 0.09322603625502993, 0.09205689534861991, 0.08929476506532506, 0.08712481818300613, 0.0849567562975782, 0.08288464314760045, 0.08261375351155058, 0.08299121672802783, 0.08192094994035173], 'val_loss': [0.712871124347051, 0.610416978597641, 0.43017373482386273, 0.3797680586576462, 0.4182639867067337, 0.3869008372227351, 0.40237294634183246, 0.41314850250879925, 0.41632001598676044, 0.41387686630090076, 0.4218134532372157, 0.43402603765328723, 0.4177987923224767, 0.42221387724081677, 0.4254719962676366, 0.4346798161665599, 0.43265289068222046, 0.43058525025844574, 0.4317585527896881, 0.43255214393138885], 'train_acc': [tensor(0.5001, dtype=torch.float64), tensor(0.6489, dtype=torch.float64), tensor(0.7831, dtype=torch.float64), tensor(0.8434, dtype=torch.float64), tensor(0.8754, dtype=torch.float64), tensor(0.8925, dtype=torch.float64), tensor(0.9273, dtype=torch.float64), tensor(0.9362, dtype=torch.float64), tensor(0.9509, dtype=torch.float64), tensor(0.9500, dtype=torch.float64), tensor(0.9683, dtype=torch.float64), tensor(0.9704, dtype=torch.float64), tensor(0.9703, dtype=torch.float64), tensor(0.9725, dtype=torch.float64), tensor(0.9726, dtype=torch.float64), tensor(0.9733, dtype=torch.float64), tensor(0.9743, dtype=torch.float64), tensor(0.9744, dtype=torch.float64), tensor(0.9746, dtype=torch.float64), tensor(0.9752, dtype=torch.float64)], 'val_acc': [tensor(0.5152, dtype=torch.float64), tensor(0.6617, dtype=torch.float64), tensor(0.7994, dtype=torch.float64), tensor(0.8332, dtype=torch.float64), tensor(0.8238, dtype=torch.float64), tensor(0.8408, dtype=torch.float64), tensor(0.8441, dtype=torch.float64), tensor(0.8522, dtype=torch.float64), tensor(0.8548, dtype=torch.float64), tensor(0.8643, dtype=torch.float64), tensor(0.8570, dtype=torch.float64), tensor(0.8561, dtype=torch.float64), tensor(0.8650, dtype=torch.float64), tensor(0.8603, dtype=torch.float64), tensor(0.8646, dtype=torch.float64), tensor(0.8636, dtype=torch.float64), tensor(0.8632, dtype=torch.float64), tensor(0.8644, dtype=torch.float64), tensor(0.8623, dtype=torch.float64), tensor(0.8636, dtype=torch.float64)], 'learning_rate': [0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05]}