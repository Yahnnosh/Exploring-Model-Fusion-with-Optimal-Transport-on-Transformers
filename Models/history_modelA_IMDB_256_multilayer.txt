{'train_loss': [0.8078898445088812, 0.7217531736860884, 0.6911963719002744, 0.6690044948395263, 0.6312340041424366, 0.5898179018751104, 0.5434015171324953, 0.4940334831146484, 0.45270583604244474, 0.4132052780465877, 0.36781405007585566, 0.32929856853282197, 0.2949775432018524, 0.2654275177641118, 0.25057010289202347, 0.2514621948308133, 0.21363027108476518, 0.19624729803267946, 0.1913489135021859, 0.17436663964961438], 'val_loss': [0.7060214479764303, 0.7119300961494446, 0.7158920665582021, 0.6727336645126343, 0.6628435651461283, 0.6263258357842764, 0.6310827434062958, 0.582443485657374, 0.5639845629533132, 0.5178149243195852, 0.48319271206855774, 0.47130775451660156, 0.4537027229865392, 0.4910018891096115, 0.44710874060789746, 0.4483676850795746, 0.4598783900340398, 0.45344404379526776, 0.4577408730983734, 0.5039516687393188], 'train_acc': [tensor(0.4991, dtype=torch.float64), tensor(0.5191, dtype=torch.float64), tensor(0.5582, dtype=torch.float64), tensor(0.5916, dtype=torch.float64), tensor(0.6436, dtype=torch.float64), tensor(0.6807, dtype=torch.float64), tensor(0.7199, dtype=torch.float64), tensor(0.7579, dtype=torch.float64), tensor(0.7858, dtype=torch.float64), tensor(0.8122, dtype=torch.float64), tensor(0.8378, dtype=torch.float64), tensor(0.8595, dtype=torch.float64), tensor(0.8752, dtype=torch.float64), tensor(0.8894, dtype=torch.float64), tensor(0.8975, dtype=torch.float64), tensor(0.8966, dtype=torch.float64), tensor(0.9154, dtype=torch.float64), tensor(0.9241, dtype=torch.float64), tensor(0.9243, dtype=torch.float64), tensor(0.9332, dtype=torch.float64)], 'val_acc': [tensor(0.5193, dtype=torch.float64), tensor(0.5257, dtype=torch.float64), tensor(0.5354, dtype=torch.float64), tensor(0.5877, dtype=torch.float64), tensor(0.6191, dtype=torch.float64), tensor(0.6578, dtype=torch.float64), tensor(0.6767, dtype=torch.float64), tensor(0.7124, dtype=torch.float64), tensor(0.7215, dtype=torch.float64), tensor(0.7561, dtype=torch.float64), tensor(0.7755, dtype=torch.float64), tensor(0.7936, dtype=torch.float64), tensor(0.8079, dtype=torch.float64), tensor(0.8001, dtype=torch.float64), tensor(0.8192, dtype=torch.float64), tensor(0.8222, dtype=torch.float64), tensor(0.8159, dtype=torch.float64), tensor(0.8234, dtype=torch.float64), tensor(0.8300, dtype=torch.float64), tensor(0.8173, dtype=torch.float64)], 'learning_rate': [0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001]}