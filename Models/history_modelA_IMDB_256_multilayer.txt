{'train_loss': [0.8090583707423921, 0.7684631525202, 0.6795125616357681, 0.6476462407315031, 0.613045500948074, 0.5723361296856657, 0.52438729811222, 0.4851579450546427, 0.44888197297745563, 0.4046275818601568, 0.38307279538601, 0.3554425341017703, 0.34067241625582917, 0.30073674245083587, 0.26681338662796833, 0.25857045136867685, 0.23773045932992976, 0.21380989475453155, 0.19599361242131985, 0.17546125644064964], 'val_loss': [0.7136903504530588, 0.696989893913269, 0.7183458606402079, 0.6820336679617564, 0.6482059756914774, 0.6698737144470215, 0.5885055661201477, 0.5835127135117849, 0.5256928900877634, 0.4981936613718669, 0.47688787678877514, 0.5759808321793874, 0.4889688690503438, 0.46676014363765717, 0.47308653593063354, 0.4605112274487813, 0.46135419110457104, 0.5096520831187566, 0.5041914681593577, 0.4863803784052531], 'train_acc': [tensor(0.4997, dtype=torch.float64), tensor(0.5242, dtype=torch.float64), tensor(0.5800, dtype=torch.float64), tensor(0.6234, dtype=torch.float64), tensor(0.6583, dtype=torch.float64), tensor(0.7004, dtype=torch.float64), tensor(0.7372, dtype=torch.float64), tensor(0.7616, dtype=torch.float64), tensor(0.7888, dtype=torch.float64), tensor(0.8152, dtype=torch.float64), tensor(0.8263, dtype=torch.float64), tensor(0.8409, dtype=torch.float64), tensor(0.8486, dtype=torch.float64), tensor(0.8717, dtype=torch.float64), tensor(0.8890, dtype=torch.float64), tensor(0.8917, dtype=torch.float64), tensor(0.9010, dtype=torch.float64), tensor(0.9162, dtype=torch.float64), tensor(0.9238, dtype=torch.float64), tensor(0.9344, dtype=torch.float64)], 'val_acc': [tensor(0.5160, dtype=torch.float64), tensor(0.5428, dtype=torch.float64), tensor(0.5416, dtype=torch.float64), tensor(0.5878, dtype=torch.float64), tensor(0.6322, dtype=torch.float64), tensor(0.6451, dtype=torch.float64), tensor(0.7048, dtype=torch.float64), tensor(0.7093, dtype=torch.float64), tensor(0.7521, dtype=torch.float64), tensor(0.7718, dtype=torch.float64), tensor(0.7835, dtype=torch.float64), tensor(0.7533, dtype=torch.float64), tensor(0.7906, dtype=torch.float64), tensor(0.7999, dtype=torch.float64), tensor(0.8063, dtype=torch.float64), tensor(0.8098, dtype=torch.float64), tensor(0.8114, dtype=torch.float64), tensor(0.8050, dtype=torch.float64), tensor(0.8115, dtype=torch.float64), tensor(0.8277, dtype=torch.float64)], 'learning_rate': [0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001]}