{'train_loss': [0.8016705005726916, 0.7095479698891335, 0.6223899379689642, 0.565122773672672, 0.5214712981213915, 0.473903699758205, 0.4374838179730354, 0.40082524938786285, 0.36596971686850205, 0.33571460082175886, 0.31046745244492874, 0.2858258241668661, 0.3115701767358374, 0.2561784890737939, 0.28385361426688255, 0.21656632486810076, 0.21200845311296748, 0.17494381964206696, 0.16530762121398399, 0.16013310706995904], 'val_loss': [0.7737447023391724, 0.6535174250602722, 0.6399044096469879, 0.5789002577463785, 0.5429970026016235, 0.559535801410675, 0.5220951785643896, 0.48811036845048267, 0.4697106033563614, 0.4566131780544917, 0.44605915745099384, 0.4398350566625595, 0.4640405923128128, 0.4866815060377121, 0.43685666223367053, 0.5064694533745447, 0.45040686428546906, 0.4648587703704834, 0.4627846082051595, 0.519039178888003], 'train_acc': [tensor(0.5021, dtype=torch.float64), tensor(0.5611, dtype=torch.float64), tensor(0.6500, dtype=torch.float64), tensor(0.7061, dtype=torch.float64), tensor(0.7393, dtype=torch.float64), tensor(0.7725, dtype=torch.float64), tensor(0.7958, dtype=torch.float64), tensor(0.8170, dtype=torch.float64), tensor(0.8360, dtype=torch.float64), tensor(0.8538, dtype=torch.float64), tensor(0.8647, dtype=torch.float64), tensor(0.8766, dtype=torch.float64), tensor(0.8656, dtype=torch.float64), tensor(0.8932, dtype=torch.float64), tensor(0.8791, dtype=torch.float64), tensor(0.9131, dtype=torch.float64), tensor(0.9143, dtype=torch.float64), tensor(0.9336, dtype=torch.float64), tensor(0.9377, dtype=torch.float64), tensor(0.9394, dtype=torch.float64)], 'val_acc': [tensor(0.5090, dtype=torch.float64), tensor(0.6199, dtype=torch.float64), tensor(0.6353, dtype=torch.float64), tensor(0.7030, dtype=torch.float64), tensor(0.7294, dtype=torch.float64), tensor(0.7306, dtype=torch.float64), tensor(0.7519, dtype=torch.float64), tensor(0.7686, dtype=torch.float64), tensor(0.7850, dtype=torch.float64), tensor(0.7976, dtype=torch.float64), tensor(0.8066, dtype=torch.float64), tensor(0.8138, dtype=torch.float64), tensor(0.8085, dtype=torch.float64), tensor(0.7999, dtype=torch.float64), tensor(0.8242, dtype=torch.float64), tensor(0.8086, dtype=torch.float64), tensor(0.8291, dtype=torch.float64), tensor(0.8288, dtype=torch.float64), tensor(0.8297, dtype=torch.float64), tensor(0.8108, dtype=torch.float64)], 'learning_rate': [0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001]}